// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeManager_Winform;

namespace RecipeManager_Winform.Migrations
{
    [DbContext(typeof(RecipesContext))]
    partial class RecipesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("RecipeManager_Winform.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ingredient_id")
                        .UseIdentityColumn();

                    b.Property<double?>("CaloriesPer100g")
                        .HasColumnType("float")
                        .HasColumnName("calories (per 100g)");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ingredient_name");

                    b.HasKey("IngredientId");

                    b.ToTable("ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            CaloriesPer100g = 130.0,
                            IngredientName = "ris"
                        },
                        new
                        {
                            IngredientId = 2,
                            CaloriesPer100g = 39.700000000000003,
                            IngredientName = "gul lök"
                        },
                        new
                        {
                            IngredientId = 3,
                            CaloriesPer100g = 884.10000000000002,
                            IngredientName = "olja"
                        },
                        new
                        {
                            IngredientId = 4,
                            CaloriesPer100g = 160.0,
                            IngredientName = "vitlöksklyfta"
                        },
                        new
                        {
                            IngredientId = 5,
                            CaloriesPer100g = 325.0,
                            IngredientName = "curry"
                        },
                        new
                        {
                            IngredientId = 6,
                            CaloriesPer100g = 82.0,
                            IngredientName = "tomatpure"
                        },
                        new
                        {
                            IngredientId = 7,
                            CaloriesPer100g = 229.90000000000001,
                            IngredientName = "kokosmjölk"
                        },
                        new
                        {
                            IngredientId = 8,
                            CaloriesPer100g = 0.0,
                            IngredientName = "vatten"
                        },
                        new
                        {
                            IngredientId = 9,
                            CaloriesPer100g = 437.80000000000001,
                            IngredientName = "grönsaksbuljongtärning"
                        },
                        new
                        {
                            IngredientId = 10,
                            CaloriesPer100g = 125.0,
                            IngredientName = "torkade röda linser"
                        },
                        new
                        {
                            IngredientId = 11,
                            CaloriesPer100g = 21.0,
                            IngredientName = "sambal oelek"
                        },
                        new
                        {
                            IngredientId = 12,
                            CaloriesPer100g = 18.0,
                            IngredientName = "körsbärstomater"
                        },
                        new
                        {
                            IngredientId = 13,
                            CaloriesPer100g = 0.0,
                            IngredientName = "salt"
                        },
                        new
                        {
                            IngredientId = 14,
                            CaloriesPer100g = 251.0,
                            IngredientName = "peppar"
                        },
                        new
                        {
                            IngredientId = 15,
                            CaloriesPer100g = 298.0,
                            IngredientName = "kruka koriander"
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("measurement_id")
                        .UseIdentityColumn();

                    b.Property<string>("MeasurementName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("measurement_name");

                    b.HasKey("MeasurementId");

                    b.ToTable("measurements");

                    b.HasData(
                        new
                        {
                            MeasurementId = 1,
                            MeasurementName = "msk"
                        },
                        new
                        {
                            MeasurementId = 2,
                            MeasurementName = "tsk"
                        },
                        new
                        {
                            MeasurementId = 3,
                            MeasurementName = "ml"
                        },
                        new
                        {
                            MeasurementId = 4,
                            MeasurementName = "dl"
                        },
                        new
                        {
                            MeasurementId = 5,
                            MeasurementName = "g"
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.Models.FoodCategory", b =>
                {
                    b.Property<int>("FoodCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("food_category_id")
                        .UseIdentityColumn();

                    b.Property<string>("FoodCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("food_category_name");

                    b.HasKey("FoodCategoryId");

                    b.ToTable("food_category");

                    b.HasData(
                        new
                        {
                            FoodCategoryId = 1,
                            FoodCategoryName = "Huvudrätt"
                        },
                        new
                        {
                            FoodCategoryId = 2,
                            FoodCategoryName = "Efterrätt"
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.Quantity", b =>
                {
                    b.Property<int>("QuantityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quantity_id")
                        .UseIdentityColumn();

                    b.Property<double?>("Quantity1")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.HasKey("QuantityId");

                    b.ToTable("quantity");

                    b.HasData(
                        new
                        {
                            QuantityId = 1,
                            Quantity1 = 100.0
                        },
                        new
                        {
                            QuantityId = 2,
                            Quantity1 = 10.0
                        },
                        new
                        {
                            QuantityId = 3,
                            Quantity1 = 200.0
                        },
                        new
                        {
                            QuantityId = 4,
                            Quantity1 = 400.0
                        },
                        new
                        {
                            QuantityId = 5,
                            Quantity1 = 500.0
                        },
                        new
                        {
                            QuantityId = 6,
                            Quantity1 = 250.0
                        },
                        new
                        {
                            QuantityId = 7,
                            Quantity1 = 450.0
                        },
                        new
                        {
                            QuantityId = 8,
                            Quantity1 = 15.0
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipe_id")
                        .UseIdentityColumn();

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int>("FoodCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("food_category_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("RecipeDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("recipe_description");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("recipe_name");

                    b.Property<int>("RecipeSourceId")
                        .HasColumnType("int")
                        .HasColumnName("recipe_source_id");

                    b.HasKey("RecipeId");

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("RecipeSourceId");

                    b.ToTable("recipe");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Duration = 45,
                            FoodCategoryId = 1,
                            Rating = 302,
                            RecipeDescription = "Krämig och matig linsgryta värmer skönt en kall höstkväll. Grytan är smaksatt med vitlök, curry och sambal oelek och gjord med kokosmjölk för extra krämighet. Servera med ris, halverade körsbärstomater och toppa med färsk koriander.",
                            RecipeName = "Linsgryta med kokosmjölk",
                            RecipeSourceId = 1
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipe_Ingredient_id")
                        .UseIdentityColumn();

                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("ingredient_id");

                    b.Property<int?>("MeasurementId")
                        .HasColumnType("int")
                        .HasColumnName("measurement_id");

                    b.Property<int?>("QuantityId")
                        .HasColumnType("int")
                        .HasColumnName("quantity_id");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int")
                        .HasColumnName("recipe_id");

                    b.HasKey("RecipeIngredientId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("QuantityId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_ingredients");

                    b.HasData(
                        new
                        {
                            RecipeIngredientId = 1,
                            IngredientId = 1,
                            QuantityId = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 2,
                            IngredientId = 2,
                            QuantityId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 3,
                            IngredientId = 3,
                            MeasurementId = 5,
                            QuantityId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 4,
                            IngredientId = 4,
                            QuantityId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 5,
                            IngredientId = 5,
                            MeasurementId = 5,
                            QuantityId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 6,
                            IngredientId = 6,
                            MeasurementId = 5,
                            QuantityId = 3,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 7,
                            IngredientId = 7,
                            MeasurementId = 5,
                            QuantityId = 4,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 8,
                            IngredientId = 8,
                            MeasurementId = 5,
                            QuantityId = 5,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 9,
                            IngredientId = 9,
                            QuantityId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 10,
                            IngredientId = 10,
                            MeasurementId = 5,
                            QuantityId = 3,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 11,
                            IngredientId = 11,
                            MeasurementId = 5,
                            QuantityId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 12,
                            IngredientId = 1,
                            MeasurementId = 5,
                            QuantityId = 6,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 13,
                            IngredientId = 13,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 14,
                            IngredientId = 14,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 15,
                            IngredientId = 15,
                            QuantityId = 2,
                            RecipeId = 1
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.RecipeSource", b =>
                {
                    b.Property<int>("RecipeSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipe_source_id")
                        .UseIdentityColumn();

                    b.Property<string>("RecipeSourceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("recipe_source_name");

                    b.Property<string>("RecipeSourceUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("recipe_source_URL");

                    b.HasKey("RecipeSourceId");

                    b.ToTable("recipe_source");

                    b.HasData(
                        new
                        {
                            RecipeSourceId = 1,
                            RecipeSourceName = "ICA",
                            RecipeSourceUrl = "https://www.ica.se/recept"
                        },
                        new
                        {
                            RecipeSourceId = 2,
                            RecipeSourceName = "Arla",
                            RecipeSourceUrl = "https://www.arla.se/recept"
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.RecipeStep", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("step_id")
                        .UseIdentityColumn();

                    b.Property<int>("RecipeId")
                        .HasColumnType("int")
                        .HasColumnName("recipe_id");

                    b.Property<string>("StepDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step_description");

                    b.Property<int?>("StepNumber")
                        .HasColumnType("int")
                        .HasColumnName("step_number");

                    b.HasKey("StepId")
                        .HasName("PK__Recipe_s__B2E1DE81D1F8BA13");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_steps");

                    b.HasData(
                        new
                        {
                            StepId = 1,
                            RecipeId = 1,
                            StepDescription = "Koka riset enligt anvisningen på förpackningen.",
                            StepNumber = 1
                        },
                        new
                        {
                            StepId = 2,
                            RecipeId = 1,
                            StepDescription = "Skala och hacka löken. Fräs den i oljan i en gryta.Pressa i vitlök och tillsätt curry och tomatpuré och fräs ytterligare någon minut.",
                            StepNumber = 2
                        },
                        new
                        {
                            StepId = 3,
                            RecipeId = 1,
                            StepDescription = "Rör i kokosmjölk, vatten, smulad buljongtärning, linser och sambal oelek.Låt koka ca 10 minuter eller enligt anvisningen på linsförpackningen.",
                            StepNumber = 3
                        },
                        new
                        {
                            StepId = 4,
                            RecipeId = 1,
                            StepDescription = "Dela tomaterna och vänd ner dem i grytan mot slutet av koktiden eller servera dem till. Smaka av grytan med salt och peppar. ",
                            StepNumber = 4
                        },
                        new
                        {
                            StepId = 5,
                            RecipeId = 1,
                            StepDescription = "Servera grytan med ris och tomater och toppa med koriander.",
                            StepNumber = 5
                        });
                });

            modelBuilder.Entity("RecipeManager_Winform.Recipe", b =>
                {
                    b.HasOne("RecipeManager_Winform.Models.FoodCategory", "FoodCategory")
                        .WithMany("Recipes")
                        .HasForeignKey("FoodCategoryId")
                        .HasConstraintName("FK__recipe__food_cat__4222D4EF")
                        .IsRequired();

                    b.HasOne("RecipeManager_Winform.RecipeSource", "RecipeSource")
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeSourceId")
                        .HasConstraintName("FK_recipe_recipe_source")
                        .IsRequired();

                    b.Navigation("FoodCategory");

                    b.Navigation("RecipeSource");
                });

            modelBuilder.Entity("RecipeManager_Winform.RecipeIngredient", b =>
                {
                    b.HasOne("RecipeManager_Winform.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .HasConstraintName("FK__recipe_in__ingre__14270015")
                        .IsRequired();

                    b.HasOne("RecipeManager_Winform.Measurement", "Measurement")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("MeasurementId")
                        .HasConstraintName("FK__recipe_in__measu__160F4887");

                    b.HasOne("RecipeManager_Winform.Quantity", "Quantity")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("QuantityId")
                        .HasConstraintName("FK__recipe_in__quant__151B244E");

                    b.HasOne("RecipeManager_Winform.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__recipe_in__recip__1332DBDC")
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Measurement");

                    b.Navigation("Quantity");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeManager_Winform.RecipeStep", b =>
                {
                    b.HasOne("RecipeManager_Winform.Recipe", "Recipe")
                        .WithMany("RecipeSteps")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__Recipe_st__recip__5CD6CB2B")
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeManager_Winform.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeManager_Winform.Measurement", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeManager_Winform.Models.FoodCategory", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RecipeManager_Winform.Quantity", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeManager_Winform.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");

                    b.Navigation("RecipeSteps");
                });

            modelBuilder.Entity("RecipeManager_Winform.RecipeSource", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
